openapi: 3.0.3
info:
  title: Swagger for ecommerce - OpenAPI 3.0
  description: Mô tả API thực tập nodeJS ở BiBoMart
  termsOfService: http://swagger.io/terms/
  contact:
    email: minhtuan0330@gmail.com
  license:
    name: Github
    url: https://github.com/tuantm0303/Thuctap_nodejs
  version: 1.0.11
servers:
  - url: http://localhost:8000/
paths:
  /api/products:
    get:
      security:
        - bearerAuth: []
      summary: Lấy danh sách sản phẩm
      tags:
        - Get Products
      responses:
        "200":
          description: Lấy sản phẩm thành công!
        "400":
          description: Không lấy được sản phẩm!
    post:
      security:
        - bearerAuth: []
      tags:
        - Create Product
      summary: Thêm sản phẩm
      description: Thêm sản phẩm bán online và bán offline
      operationId: addProduct
      requestBody:
        description: Bắt buộc phải có các trường giống bên dưới
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Product"
        required: true
      responses:
        "200":
          description: Thêm sản phẩm thành công!
        "400":
          description: Không thêm được sản phẩm!
  /api/products/{productId}:
    get:
      security:
        - bearerAuth: []
      tags:
        - Get One Product
      summary: Lấy một sản phẩm
      description: Returns a single pet
      operationId: getProductById
      parameters:
        - name: productId
          in: path
          description: ID một sản phẩm
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Lấy một sản phẩm thành công!
        "400":
          description: Không lấy được sản phẩm!
    put:
      security:
        - bearerAuth: []
      tags:
        - Put Product
      summary: Cập nhật một sản phẩm
      description: Cập nhật một sản phẩm
      operationId: updateProductById
      parameters:
        - name: productId
          in: path
          description: Chọn sản phẩm cần cập nhật
          required: true
          schema:
            type: string
      requestBody:
        description: Bắt buộc phải có các trường giống bên dưới
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Product"
      responses:
        "200":
          description: Cập nhật sản phẩm thành công!
        "400":
          description: Không cập nhật được sản phẩm!
    delete:
      security:
        - bearerAuth: []
      tags:
        - Delete One Product
      summary: Xóa một sản phẩm
      description: Xóa một sản phẩm
      operationId: deleteProductById
      parameters:
        - name: productId
          in: path
          description: Product id to delete
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Xóa sản phẩm thành công!
        "400":
          description: Không xóa được sản phẩm!

  /api/stores:
    get:
      security:
        - bearerAuth: []
      summary: Lấy danh sách cửa hàng
      tags:
        - Get Stores
      responses:
        "200":
          description: Lấy cửa hàng thành công!
        "400":
          description: Không lấy được cửa hàng!
    post:
      security:
        - bearerAuth: []
      tags:
        - Create Store
      summary: Thêm cửa hàng
      description: Thêm cửa hàng
      operationId: addStore
      requestBody:
        description: Bắt buộc phải có các trường giống bên dưới
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Store"
        required: true
      responses:
        "200":
          description: Thêm cửa hàng thành công!
        "400":
          description: Không thêm được cửa hàng!
  /api/stores/{storeId}:
    get:
      security:
        - bearerAuth: []
      tags:
        - Get One Store
      summary: Lấy một cửa hàng
      description: Returns a single pet
      operationId: getStoreById
      parameters:
        - name: storeId
          in: path
          description: ID một cửa hàng
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Lấy một cửa hàng thành công!
        "400":
          description: Không lấy được cửa hàng!
    put:
      security:
        - bearerAuth: []
      tags:
        - Put Store
      summary: Cập nhật một cửa hàng
      description: Cập nhật một cửa hàng
      operationId: updateStoreById
      parameters:
        - name: storeId
          in: path
          description: Chọn cửa hàng cần cập nhật
          required: true
          schema:
            type: string
      requestBody:
        description: Bắt buộc phải có các trường giống bên dưới
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Store"
      responses:
        "200":
          description: Cập nhật cửa hàng thành công!
        "400":
          description: Không cập nhật được cửa hàng!
    delete:
      security:
        - bearerAuth: []
      tags:
        - Delete One Store
      summary: Xóa một cửa hàng
      description: Xóa một cửa hàng
      operationId: deleteStoreById
      parameters:
        - name: storeId
          in: path
          description: Strore id to delete
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Xóa cửa hàng thành công!
        "400":
          description: Không xóa được cửa hàng!

  /api/orders/review/{orderId}:
    get:
      tags:
        - Get Order Review by Order
      summary: Lấy danh sách đơn hàng đã review theo id đơn hàng
      parameters:
        - name: orderId
          in: path
          description: ID một đơn hàng
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Lấy danh sách đơn hàng đã review theo id đơn hàng thành công!
        "400":
          description: Không lấy được đơn hàng!
  /api/orders/addReview:
    post:
      tags:
        - Create Order Review by Order
      summary: Tạo đơn hàng theo id đơn hàng
      parameters:
        - name: orderId
          in: path
          description: ID một đơn hàng
          required: true
          schema:
            type: string
      requestBody:
        description: Bắt buộc phải có các trường giống bên dưới
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/OrderReviewByOrder"
      responses:
        "200":
          description: Tạo danh sách đơn hàng đã review theo id đơn hàng thành công!
        "400":
          description: Không thêm được đơn hàng!

  /api/signup:
    post:
      tags:
        - Signup User
      summary: Đăng kí
      description: Dành cho user đăng kí
      operationId: signupUser
      requestBody:
        description: Created user object
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Users"
      responses:
        "200":
          description: Đăng kí thành công!
        "400":
          description: Đăng kí thất bại!

  /api/signin:
    post:
      tags:
        - Signin User
      summary: Đăng nhập
      description: "Dành cho user đăng nhập"
      operationId: signinUser
      parameters:
        - name: email
          in: query
          description: Nhập email của bạn
          required: false
          schema:
            type: string
        - name: password
          in: query
          description: Nhập password của bạn
          required: false
          schema:
            type: string
      responses:
        "200":
          description: Đăng nhập thành công!
        "400":
          description: Đăng nhập thất bại!

# Models
components:
  schemas:
    Product:
      properties:
        brand:
          type: number
        name:
          type: string
        parent:
          type: number
        quantity:
          type: number
        sku:
          type: string
        status:
          type: number
        thumbnail:
          type: string
        unit:
          type: string
        productOnlinePrice:
          $ref: "#/components/schemas/ProductOnlinePrice"
        listProductStorePrice:
          type: array
          $ref: "#/components/schemas/ProductStorePrice"

    ProductOnlinePrice:
      properties:
        sku:
          type: string
        price:
          type: object
          properties:
            raw:
              type: number
            discount:
              type: number

    ProductStorePrice:
      properties:
        sku:
          type: string
        store:
          type: string
        price:
          type: object
          properties:
            raw:
              type: number
            discount:
              type: number

    Store:
      type: object
      properties:
        name:
          type: string
        address:
          type: string
        code:
          type: string
        location:
          type: object
          properties:
            latitude:
              type: number
            longitude:
              type: number
        working:
          type: object
          properties:
            open:
              type: number
            close:
              type: number

    Users:
      properties:
        username:
          type: string
        email:
          type: string
        password:
          type: string
        phone:
          type: string
      required:
        - username
        - email
        - password
        - phone

    OrderLine:
      properties:
        orderId:
          type: string
        owner:
          type: number
        product:
          type: string
        sale:
          type: string
        type:
          type: string
        amount:
          type: number
        bixu:
          type: number
        price:
          type: object
        quantity:
          type: number

    OrderReview:
      properties:
        orderId:
          type: string
        product:
          type: string
        rate:
          type: number
        comment:
          type: string
        media:
          type: object
          properties:
            type:
              type: array
              items:
                type: object
                properties:
                  type:
                    type: string
                  url:
                    type: string
        owner:
          type: number

    OrderReviewByOrder:
      properties:
        productOrders:
          type: array
          items:
            type: object
            properties:
            $ref: "#/components/schemas/OrderReview"

  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
